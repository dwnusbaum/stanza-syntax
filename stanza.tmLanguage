<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>stanza</string>
	</array>
	<key>name</key>
	<string>Stanza</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>;.*$</string>
			<key>name</key>
			<string>comment.line.semicolon.stanza</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])(and|as|by|else|for|generate|if|in|is|labels|label|match|not|or|switch|through|throw|to|when|while)(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])</string>
			<key>name</key>
			<string>keyword.control.stanza</string>
		</dict>
		<dict>
			<key>match</key>
			<string>((^)|(?&lt;=[,.:&amp;|&lt;&gt;\[\]{}() \r\n]))(let|with|where)(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])</string>
			<key>name</key>
			<string>keyword.other.stanza</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
(?&lt;=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])
(abs|acos|active\?|add\-all|add\-gc\-notifier|add|all\?|any\?|append\-all|append|arithmetic\-shift\-right|asin|atan2|atan|
bits\-as\-double|bits\-as\-float|bits|bit\-and|bit\-nor|bit\-or|bit\-xor|break|but\-last|BYTE\-MAX|BYTE\-MIN|
call\-system|cat\-all|cat|ceil\-log2|ceil|clear|close|column|command\-line\-arguments|compare|complement|cons|contains\?|cosh|cos|count|current\-output\-stream|current\-time\-ms|current\-time\-us|
default|delete\-file|digit\?|divide|do\-indented|do|dynamic\-wind|
empty\?|end|equal\?|exit|exp|
fatal|filename|file\-exists?|fill|filter|first|find\!|find|floor\-log2|floor|free|
genid|gensym|get\-byte|get\-chars|get\-char|get\-double|get\-env|get\-float|get\-int|get\-long|get|greater\-eq\?|greater\?|
hash|head\-n|head|
inclusive|indented|index\-of\-chars|index\-of\-char|index\-of\!|index\-of|index\-when\!|index\-when|info|INT\-MAX|INT\-MIN|in\-reverse|item|
join|
key\?|
last\-index\-of\-chars|last\-index\-of\-char|last|lazy\-qsort|lengthen|length|less\-eq\?|less\?|letter\?|line|log10|log|LONG\-MAX|LONG\-MIN|lookup\?|lower\-case\?|lower\-case|
marker\!|marker|map\!|map|matches\?|maximum|max|minimum|minus|min|modulo|
name|negate|next\-pow2|next|norm\-path|none\?|not\-equal\?|
open\?|
parallel\-seq|peek\?|peek|PI|plus|pop|pow|prefix\?|prev\-pow2|println\-all|println|print\-all|print|product|
qualified\?|qualifier|qsort\!|
rand|reduce\-right|reduce|remove\-item|remove\-when|remove|repeat\-while|repeatedly|repeat|replace|resolve\-path|resume|reverse\!|reverse|round|
set\-env|set\-length|set|seq\-cat|seq\-append|seq\?|seq|shift\-left|shift\-right|shorten|sinh|sin|slurp|split|spit|sqrt|STANDARD\-ERROR\-STREAM|STANDARD\-INPUT\-STREAM|STANDARD\-OUTPUT\-STREAM|start|step|stop|string\-join|suffix\?|sum|suspend|symbol\-join|
tail\-n|tail|take\-n|take\-until|take\-up\-to\-n|take\-while|tanh|tan|ranspose|trim|times|time|to\-array|to\-byte|to\-char|to\-degrees|to\-double|to\-float|to\-int|to\-long|to\-radians|to\-seq|to\-string|to\-symbol|to\-tuple|
unique|unwrap\-all|unwrap\-token|update|upper\-case\?|upper\-case|
value\!|value|with\-attempt|
with\-error\-handler|with\-exception\-handler|with\-finally|with\-output\-file|write\-all|write|
yield|
zip\-all|zip)
(?=[, ]*(\(|\{|\$|:))
</string>
			<key>name</key>
			<string>support.function.stanza</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])(true|false)(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])</string>
			<key>name</key>
			<string>constant.language.stanza</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])(-?[0-9][0-9]*[Ll]?)(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])</string>
			<key>name</key>
			<string>constant.numeric.stanza</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.stanza</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\'((\\[bnrt])|.)\'</string>
			<key>name</key>
			<string>string.quoted.single.stanza</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\"</string>
			<key>end</key>
			<string>\"</string>
			<key>name</key>
			<string>string.quoted.double.stanza</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[nrt\\]</string>
					<key>name</key>
					<string>constant.character.escape.stanza</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\%_</string>
					<key>name</key>
					<string>constant.character.placeholder.stanza</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([^\\])</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#predefined-types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#parameters</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.stanza</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.other.module.stanza</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(^)(defpackage)([, \r\n]+)([^,.:&amp;|&lt;&gt;\[\]{}() \r\n]+)(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])</string>
			<key>name</key>
			<string>meta.package.stanza</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.stanza</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.other.module.stanza</string>
				</dict>
			</dict>
			<key>match</key>
			<string>((^)|(?&lt;=[,.:&amp;|&lt;&gt;\[\]{}() \r\n]))(import)([, \r\n]+)([^,.:&amp;|&lt;&gt;\[\]{}() \r\n]+)(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])</string>
			<key>name</key>
			<string>meta.import.stanza</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^[, ]*)((public|protected)([, ]+))?(extern)([, ]*)([^,.:&amp;|&lt;&gt;\[\]{}() \r\n]+)([, ]*)(:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.stanza</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.other.stanza</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.stanza</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.stanza</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.extern.stanza</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameters</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^[, ]*)((public|protected)([, ]+))?((lostanza)([, ]+))?(def(struct|type))</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.stanza</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.other.stanza</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>keyword.other.stanza</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(:)|$</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.stanza</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.stanza</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameters</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^[, ]*)((public|protected)([, ]+))?((lostanza)([, ]+))?(def(method\*?|multi|n\*?))([, \r\n])+([^0-9][^, :\r\n]+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.stanza</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.stanza</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.other.stanza</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>keyword.other.stanza</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(:)|$</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.stanza</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.stanza</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#types</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function.anonymous.stanza</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|[, ]+)(fn\*?)([, \r\n])+</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.stanza</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(:)|$</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.stanza</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parameters</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>({)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.stanza</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.stanza</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])(_)(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])</string>
							<key>name</key>
							<string>variable.language.stanza</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.definition.variable.stanza</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^[, ]*)((public|protected)([, ]+))?((lostanza)([, ]+))?(resource|val|var)([, ]+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.stanza</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>keyword.other.stanza</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>keyword.other.stanza</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(=|$)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.stanza</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\[(?=.*:.*\])</string>
							<key>end</key>
							<string>\]</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>([^,.:&amp;|&lt;&gt;\[\]{}() \r\n]*\w[^,.:&amp;|&lt;&gt;\[\]{}() \r\n]*)([, ]*)(:)([, ]*)</string>
									<key>beginCaptures</key>
									<dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.stanza</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(,)|(?=\])</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#types</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(:)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.stanza</string>
								</dict>
							</dict>
							<key>end</key>
							<string>([ ]|(?==))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#types</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>([, ]*)(new)([, ]+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.stanza</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(:)|$</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.stanza</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.new.stanza</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#types</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])([~!@#$%^*+=/-]*)(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])</string>
					<key>name</key>
					<string>keyword.operator.stanza</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([.:&amp;&lt;&gt;|/])</string>
					<key>name</key>
					<string>keyword.operator.stanza</string>
				</dict>
			</array>
		</dict>
		<key>parameters</key>
		<dict>
			<key>name</key>
			<string>meta.list.parameter.stanza</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\([, ]*\)</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\((?!.*\".*)(?=.*(:|this).*\))</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])(this)(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])</string>
							<key>name</key>
							<string>variable.language.stanza</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>([^,.:&amp;|&lt;&gt;\[\]{}() \r\n]*\w[^,.:&amp;|&lt;&gt;\[\]{}() \r\n]*)([, ]*)(:)([, ]*)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.stanza</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.stanza</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(,)|(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#types</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\[[, ]*\]</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[(?=.*:.*\])</string>
					<key>end</key>
					<string>\]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>([^,.:&amp;|&lt;&gt;\[\]{}() \r\n]*\w[^,.:&amp;|&lt;&gt;\[\]{}() \r\n]*)([, ]*)(:)([, ]*)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.stanza</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.stanza</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(,)|(?=\])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#types</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>predefined-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)
(?&lt;=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])(
  Array|
  Byte|byte|
  CharArray|Char|Collection|Comparable|Coroutine|
  Double|double|
  Equalable|Exception|
  False|FileCloseException|FileDeletionError|FileInfo|FileInputStream|FileOpenException|FileOutputStream|FileReadException|FileWriteException|Float|float|
  Generator|GenSymbol|
  Hashable|HashTable|
  IndentedStream|IndexedCollection|InputStream|Int|int|IOException|
  KeyValue|
  LabeledScope|Lengthable|List|LivenessMarker|LivenessTracker|Long|long|
  Maybe|MicrosecondTimer|MillisecondTimer|
  None|
  One|OutputStream|
  PiggybackTimer|ptr|
  Range|ref|Resource|
  Queue|
  Seqable|Seq|SetEnvException|StringBuffer|StringInputStream|StringSymbol|String|Symbol|SystemCallException|
  Table|Timer|Token|Tuple|True|
  Vector
)(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])
</string>
					<key>name</key>
					<string>support.type.stanza</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])\?(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])</string>
					<key>name</key>
					<string>variable.language.stanza</string>
				</dict>
			</array>
		</dict>
		<key>types</key>
		<dict>
			<key>name</key>
			<string>meta.type.stanza</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;:|-&gt;|\||\&amp;)[ ]*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.stanza</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[,.:&amp;|&lt;&gt;\[\]{}() \r\n])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.stanza</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.stanza</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[)</string>
					<key>end</key>
					<string>(\])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#predefined-types</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([^,.:&amp;|&lt;&gt;\[\]{}() \r\n]*\w[^,.:&amp;|&lt;&gt;\[\]{}() \r\n]*)</string>
					<key>name</key>
					<string>storage.type.stanza</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.stanza</string>
	<key>uuid</key>
	<string>a88f61d8-d025-40a1-9087-91806d7fa16f</string>
</dict>
</plist>
